/* 
 * RobusTest Api
 *
 * RobusTest Apis
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test Bug
        /// </summary>
        [Test]
        public void BugTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Bug();
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test Jira
        /// </summary>
        [Test]
        public void JiraTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Jira();
            //Assert.IsInstanceOf<List<JiraConfig>> (response, "response is List<JiraConfig>");
        }
        
        /// <summary>
        /// Test JiraConfig
        /// </summary>
        [Test]
        public void JiraConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JiraConfigPayload body = null;
            //var response = instance.JiraConfig(body);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test JiraConfig_0
        /// </summary>
        [Test]
        public void JiraConfig_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JiraConfigPayload payload = null;
            //var response = instance.JiraConfig_0(payload);
            //Assert.IsInstanceOf<JiraConfig> (response, "response is JiraConfig");
        }
        
        /// <summary>
        /// Test JiraConfig_1
        /// </summary>
        [Test]
        public void JiraConfig_1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.JiraConfig_1();
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test JiraIssue
        /// </summary>
        [Test]
        public void JiraIssueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JiraIssuePayload body = null;
            //var response = instance.JiraIssue(body);
            //Assert.IsInstanceOf<JiraIssueResponse> (response, "response is JiraIssueResponse");
        }
        
        /// <summary>
        /// Test Jira_0
        /// </summary>
        [Test]
        public void Jira_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Jira_0();
            //Assert.IsInstanceOf<List<JiraProject>> (response, "response is List<JiraProject>");
        }
        
        /// <summary>
        /// Test Jira_1
        /// </summary>
        [Test]
        public void Jira_1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Jira_1();
            //Assert.IsInstanceOf<List<JiraProject>> (response, "response is List<JiraProject>");
        }
        
        /// <summary>
        /// Test Jira_2
        /// </summary>
        [Test]
        public void Jira_2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Jira_2();
            //Assert.IsInstanceOf<JiraProject> (response, "response is JiraProject");
        }
        
        /// <summary>
        /// Test Project
        /// </summary>
        [Test]
        public void ProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProjectUpdatePayload body = null;
            //var response = instance.Project(body);
            //Assert.IsInstanceOf<Project> (response, "response is Project");
        }
        
    }

}
