---
swagger: "2.0"
info:
  description: "RobusTest Apis"
  version: "1.0.0"
  title: "RobusTest Api"
  termsOfService: "http://robustest.com/terms/"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
host: "robustest.com"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /node_ip:8080/v2/status:
    get:
      summary: "get devices status, in progress, allready added"
      description: "get devices status, in progress, allready added"
      operationId: "neuron"
      parameters: []
      responses:
        200:
          description: "device list"
          schema:
            $ref: "#/definitions/deviceStatus"
  /admin/v3/bug/trackerlist:
    get:
      summary: "get list for all supported bug trakers"
      description: "get list for all supported bug trakers"
      operationId: "bug"
      parameters: []
      responses:
        200:
          description: "A JSON array of supported bug tracker name"
          schema:
            type: "array"
            items:
              type: "string"
  /admin/v3/bug/config/jira:
    get:
      summary: "get all jira config"
      description: "get all jira config"
      operationId: "jira"
      parameters: []
      responses:
        200:
          description: "get list of jira config"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/JiraConfig"
    post:
      summary: "create a jira config"
      description: "create a jira config"
      operationId: "jiraConfig"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/JiraConfigPayload"
        x-exportParamName: "Body"
      responses:
        200:
          description: "A JSON array of jira project names"
          schema:
            type: "array"
            items:
              type: "string"
  /admin/v3/bug/config/jira/{jira_config_id}:
    put:
      summary: "update a jira config"
      description: "update a jira config"
      operationId: "jiraConfig"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/JiraConfigPayload"
        x-exportParamName: "Payload"
      responses:
        200:
          description: "jira config"
          schema:
            $ref: "#/definitions/JiraConfig"
    delete:
      summary: "delete jira config and all associated jira project"
      description: "update all projects for a jira config"
      operationId: "jiraConfig"
      parameters: []
      responses:
        200:
          schema:
            type: "string"
    patch:
      summary: "update all projects for a jira config"
      description: "update all projects for a jira config"
      operationId: "jiraConfig"
      parameters: []
      responses:
        200:
          description: "A JSON array of jira project names"
          schema:
            type: "array"
            items:
              type: "string"
  /admin/v3/bug/config/jira/projects:
    get:
      summary: "get all jira project"
      description: "get all jira project"
      operationId: "jira"
      parameters: []
      responses:
        200:
          description: "get list of jira project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/JiraProject"
  /admin/v3/bug/config/jira/config/{congfig_id}/projects:
    get:
      summary: "get all jira project for given config"
      description: "get all jira project for given config"
      operationId: "jira"
      parameters: []
      responses:
        200:
          description: "get list of jira project for given config"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/JiraProject"
  /admin/v3/bug/config/jira/projects/{jira_project_id}:
    get:
      summary: "get a jira project  details"
      description: "get a jira project details"
      operationId: "jira"
      parameters: []
      responses:
        200:
          description: "get a jira project details"
          schema:
            $ref: "#/definitions/JiraProject"
  /v3/bug/jira/{jira_project_id}/create:
    post:
      summary: "create a jira issue"
      description: "create a jira issue"
      operationId: "jiraIssue"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/jiraIssuePayload"
        x-exportParamName: "Body"
      responses:
        200:
          description: "A JSON array of jira project names"
          schema:
            $ref: "#/definitions/jiraIssueResponse"
  /v3/project/{project_id}:
    put:
      summary: "Update Project"
      description: "Update Project from user interface"
      operationId: "project"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/projectUpdatePayload"
        x-exportParamName: "Body"
      responses:
        200:
          description: "A JSON array of jira project names"
          schema:
            $ref: "#/definitions/project"
definitions:
  deviceStatus:
    type: "object"
    properties:
      addedDevices:
        type: "array"
        items:
          type: "string"
      inProgressDevices:
        type: "array"
        items:
          type: "string"
      notAddedDevices:
        type: "array"
        items:
          type: "string"
      triedAttempted:
        type: "array"
        items:
          type: "string"
    example:
      addedDevices:
      - "addedDevices"
      - "addedDevices"
      inProgressDevices:
      - "inProgressDevices"
      - "inProgressDevices"
      notAddedDevices:
      - "notAddedDevices"
      - "notAddedDevices"
      triedAttempted:
      - "triedAttempted"
      - "triedAttempted"
  JiraConfig:
    type: "object"
    properties:
      _id:
        type: "string"
      source:
        type: "string"
      type:
        type: "string"
      url:
        type: "string"
      name:
        type: "string"
      user:
        type: "string"
      password:
        type: "string"
      createdBy:
        type: "string"
      updated:
        type: "string"
      created:
        type: "string"
    example:
      password: "password"
      createdBy: "createdBy"
      created: "created"
      name: "name"
      _id: "_id"
      source: "source"
      type: "type"
      user: "user"
      updated: "updated"
      url: "url"
  JiraConfigPayload:
    type: "object"
    required:
    - "name"
    - "password"
    - "url"
    - "user"
    properties:
      url:
        type: "string"
      name:
        type: "string"
      user:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      name: "name"
      user: "user"
      url: "url"
  JiraProject:
    type: "object"
    properties:
      _id:
        type: "string"
      source:
        type: "string"
      key:
        type: "string"
      id:
        type: "string"
      name:
        type: "string"
      desc:
        type: "string"
      users:
        type: "array"
        items:
          $ref: "#/definitions/JiraProject_users"
      type:
        type: "string"
      component:
        type: "array"
        items:
          $ref: "#/definitions/JiraProject_component"
      updated:
        type: "string"
      created:
        type: "string"
    example:
      component:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      created: "created"
      name: "name"
      _id: "_id"
      source: "source"
      id: "id"
      type: "type"
      updated: "updated"
      key: "key"
      users:
      - avatarUrl: "avatarUrl"
        displayName: "displayName"
        name: "name"
        key: "key"
        email: "email"
      - avatarUrl: "avatarUrl"
        displayName: "displayName"
        name: "name"
        key: "key"
        email: "email"
      desc: "desc"
  jiraIssueResponse:
    type: "object"
    properties:
      id:
        type: "string"
      self:
        type: "string"
      key:
        type: "string"
    example:
      self: "self"
      id: "id"
      key: "key"
  jiraIssuePayload:
    type: "object"
    required:
    - "assingeeKey"
    - "assingeeName"
    - "attachements"
    - "description"
    - "projectKey"
    - "reporterKey"
    - "reporterName"
    - "summary"
    - "type"
    properties:
      projectKey:
        type: "string"
      assingeeName:
        type: "string"
      assingeeKey:
        type: "string"
      reporterName:
        type: "string"
      reporterKey:
        type: "string"
      description:
        type: "string"
      summary:
        type: "string"
      type:
        type: "string"
      attachements:
        type: "array"
        items:
          $ref: "#/definitions/jiraIssuePayload_attachements"
  projectUpdatePayload:
    type: "object"
    required:
    - "active"
    - "admin"
    - "bugProject"
    - "users"
    properties:
      active:
        type: "boolean"
      bugProject:
        type: "string"
      users:
        type: "array"
        items:
          type: "string"
      admin:
        type: "array"
        items:
          type: "string"
  project:
    type: "object"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
      org:
        type: "string"
      os:
        type: "string"
      icon64:
        type: "string"
      type:
        type: "string"
      url:
        type: "string"
      bugProject:
        type: "string"
      admin:
        type: "array"
        items:
          type: "string"
      users:
        type: "array"
        items:
          type: "string"
      test_c:
        type: "number"
      active:
        type: "boolean"
      is_universal:
        type: "boolean"
      last:
        type: "string"
      created:
        type: "string"
      updated:
        type: "string"
      update_by:
        type: "string"
      created_by:
        type: "string"
    example:
      bugProject: "bugProject"
      test_c: 0.80082819046101150206595775671303272247314453125
      icon64: "icon64"
      os: "os"
      last: "last"
      org: "org"
      created: "created"
      is_universal: true
      admin:
      - "admin"
      - "admin"
      active: true
      type: "type"
      created_by: "created_by"
      url: "url"
      users:
      - "users"
      - "users"
      name: "name"
      _id: "_id"
      update_by: "update_by"
      updated: "updated"
  JiraProject_users:
    properties:
      key:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      avatarUrl:
        type: "string"
      displayName:
        type: "string"
    example:
      avatarUrl: "avatarUrl"
      displayName: "displayName"
      name: "name"
      key: "key"
      email: "email"
  JiraProject_component:
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  jiraIssuePayload_attachements:
    properties:
      type:
        type: "string"
        description: "valid type ['text', 'png', 'jpeg']"
      name:
        type: "string"
      data:
        type: "string"
