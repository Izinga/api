/*
 * RobusTest Hub
 * RobusTest Hub Api [http://mobile.robustest.com:8085 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Device;
import io.swagger.client.model.Device1;
import io.swagger.client.model.Device2;
import io.swagger.client.model.Device3;
import io.swagger.client.model.Device4;
import io.swagger.client.model.Device5;
import io.swagger.client.model.Error;
import io.swagger.client.model.HubDevices;
import io.swagger.client.model.InlineResponse200;
import io.swagger.client.model.InlineResponse2001;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HubApi
 */
@Ignore
public class HubApiTest {

    private final HubApi api = new HubApi();

    
    /**
     * run adb  command
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceCommandPostTest() throws ApiException {
        Device5 device = null;
        InlineResponse2001 response = api.deviceCommandPost(device);

        // TODO: test validations
    }
    
    /**
     * free device
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceDeleteTest() throws ApiException {
        Device1 device = null;
        Device response = api.deviceDelete(device);

        // TODO: test validations
    }
    
    /**
     * get free device based on given parameters
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void devicePutTest() throws ApiException {
        Device device = null;
        Device response = api.devicePut(device);

        // TODO: test validations
    }
    
    /**
     * unrevrse the device
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceReverseDeleteTest() throws ApiException {
        Device3 device = null;
        Device response = api.deviceReverseDelete(device);

        // TODO: test validations
    }
    
    /**
     * reverse a device
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceReversePutTest() throws ApiException {
        Device2 device = null;
        Device response = api.deviceReversePut(device);

        // TODO: test validations
    }
    
    /**
     * run adb shell command
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deviceShellPostTest() throws ApiException {
        Device4 device = null;
        InlineResponse200 response = api.deviceShellPost(device);

        // TODO: test validations
    }
    
    /**
     * list all attached devices to RobusTest
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void devicesTest() throws ApiException {
        HubDevices response = api.devices();

        // TODO: test validations
    }
    
}
