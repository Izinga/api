/*
 * RobusTest Api
 * RobusTest Apis
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ProjectUpdatePayload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-01T22:39:31.613+05:30")
public class ProjectUpdatePayload {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("bugProject")
  private String bugProject = null;

  @SerializedName("users")
  private List<String> users = new ArrayList<String>();

  @SerializedName("admin")
  private List<String> admin = new ArrayList<String>();

  public ProjectUpdatePayload active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public ProjectUpdatePayload bugProject(String bugProject) {
    this.bugProject = bugProject;
    return this;
  }

   /**
   * Get bugProject
   * @return bugProject
  **/
  @ApiModelProperty(required = true, value = "")
  public String getBugProject() {
    return bugProject;
  }

  public void setBugProject(String bugProject) {
    this.bugProject = bugProject;
  }

  public ProjectUpdatePayload users(List<String> users) {
    this.users = users;
    return this;
  }

  public ProjectUpdatePayload addUsersItem(String usersItem) {
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public ProjectUpdatePayload admin(List<String> admin) {
    this.admin = admin;
    return this;
  }

  public ProjectUpdatePayload addAdminItem(String adminItem) {
    this.admin.add(adminItem);
    return this;
  }

   /**
   * Get admin
   * @return admin
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getAdmin() {
    return admin;
  }

  public void setAdmin(List<String> admin) {
    this.admin = admin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectUpdatePayload projectUpdatePayload = (ProjectUpdatePayload) o;
    return Objects.equals(this.active, projectUpdatePayload.active) &&
        Objects.equals(this.bugProject, projectUpdatePayload.bugProject) &&
        Objects.equals(this.users, projectUpdatePayload.users) &&
        Objects.equals(this.admin, projectUpdatePayload.admin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, bugProject, users, admin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectUpdatePayload {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    bugProject: ").append(toIndentedString(bugProject)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

