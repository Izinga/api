openapi: 3.0.0
info:
  title: RobusTest API
  description: RobusTest API documentation
  x-logo:
    url: "https://izinga.github.io/api/logo.png"
    backgroundColor: "#FFFFFF"
    altText: "RobusTest"
  version: 0.1.9
servers:
  - url: http://devicelab.robustest.com/v3
    description: api documentation server

securityDefinitions:
  accesskey:
    type: apiKey
    name: accesskey
    in: query

security:
  - accesskey: [] 

tags:
  - name: job
    description: Job methods provide access to job
  - name: setting
    description: Store methods provide access to setting.
  - name: device 
    description: device related apis 
  - name: session
    description: session related apis


paths:
  /jobs/{projectID}:
    get:
      summary: List all job
      operationId: listJobs
      tags:
        - job
      parameters:
        - name: projectID
          in: path
          required: true
          description: The id of the project for which we need to list job
          schema:
            type: string
        - name: count
          in: query
          description: How many items to return at one time
          required: false
          schema:
            type: number
        - name: cursor
          in: query
          description: cursor 
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A paged array of jobs
          content:
           application/json; charset=utf-8:
             schema:
              type: object
              required:
               - cursor
               - jobs
               - totalCount
              properties:
                cursor:
                  type: string
                totalCount:
                  type: number
                jobs: 
                  type: array
                  items:
                   $ref: "components/job.yaml#/Job"

  /testsession/{testSessionID}:
    get:
      summary: Get test session details
      tags:
        - session
      parameters:
        - name: testSessionID
          in: path
          required: true
          description: the test session ID generated by RobusTest
          schema:
            type: string


  /job/{jobID}:
    get:
      summary: Info for a specific job
      operationId: getJobByID
      tags:
        - job
      parameters:
        - name: jobID
          in: path
          required: true
          description: The id of the job to retrieve
          schema:
            type: string
      responses:
        '200':
          description: job
          content:
            application/json:

              schema:
                $ref: "components/job.yaml#/Job"

  /job/{jobID}/runs:
    get:
      summary: Get all runs for given job 
      operationId: getRunsJobByID
      tags:
        - job
      parameters:
        - name: jobID
          in: path
          required: true
          description: The id of the job to retrieve
          schema:
            type: string
      responses:
        '200':
          description: list of runs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components/run.yaml#/Run"

  /job/{jobID}/instances:
    get:
      summary: Get all instances for given job 
      operationId: getInstancesJobByID
      tags:
        - job
      parameters:
        - name: jobID
          in: path
          required: true
          description: The id of the job to retrieve
          schema:
            type: string
      responses:
        '200':
          description: list of instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components/instance.yaml#/Instance"

  /job/{jobID}/testcases:
    get:
      summary: Get all testcases for given job 
      operationId: gettTestcasesJobByID
      tags:
        - job
      parameters:
        - name: jobID
          in: path
          required: true
          description: The id of the job to retrieve
          schema:
            type: string
      responses:
        '200':
          description: list of testcases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components/testcase.yaml#/Testcase"
  
  /job/new:
    post:
      summary: Create a new job on RobusTest. One API to rule them all.
      tags:
        - job
        - create
      requestBody:
        required: true
        content: 
          application/json
            schema:
              $ref: "components/jobRequestPayload.yaml#/jobRequestPayload"


  /testcase/{testcaseID}:
    get:
      summary: Info for a specific testcase
      operationId: gettTestcaseByID
      tags:
        - job
      parameters:
        - name: testcaseID
          in: path
          required: true
          description: The id of the testcase to retrieve
          schema:
            type: string
      responses:
        '200':
          description: testcase
          content:
            application/json:
              schema:
                $ref: "components/testcase.yaml#/Testcase"

  /testcase/{testcaseID}/results:
    get:
      summary: Get all results for given testcase 
      operationId: gettResultByTestcaseID
      tags:
        - job
      parameters:
        - name: testcaseID
          in: path
          required: true
          description: The id of the testcase to retrieve
          schema:
            type: string
      responses:
        '200':
          description: list of results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "components/result.yaml#/Result"


  /result/{resultID}:
    get:
      summary: Info for a specific result
      operationId: gettResultByID
      tags:
        - job
      parameters:
        - name: resultID
          in: path
          required: true
          description: The id of the result to retrieve
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: "components/result.yaml#/Result"


  /log/{resultID}/result:
    get:
      summary: get test framework log for specific result
      operationId: gettFrameworlLogByResultID
      tags:
        - job
      parameters:
        - name: resultID
          in: path
          required: true
          description: The id of the result 
          schema:
            type: string
      responses:
        '200':
          description: log
          content:
            application/json:
              schema:
                $ref: "components/log.yaml#/Log"

  /log/{resultID}/device:
    get:
      summary: get test device log for specific result
      operationId: gettDeviceLogByResultID
      tags:
        - job
      parameters:
        - name: resultID
          in: path
          required: true
          description: The id of the result 
          schema:
            type: string
      responses:
        '200':
          description: log
          content:
            application/json:
              schema:
                $ref: "components/log.yaml#/Log"


  /device/{device_ID}/reserve:
    put:
      summary: reserve device 
      operationId: reserveDevice
      tags:
        - device
      parameters:
        - name: device_ID
          in: path
          required: true
          description: The id of the device 
          schema:
            type: string
        - name: payload
          in: body
          required: true
          schema:
              $ref: 'components/device/reserve.yaml#/ReservePayload'
      responses:
        '200':
          description: device
          content:
            application/json:
              schema:
                $ref: "components/device/device.yaml#/Device"

    delete:
      summary: unreserve device
      description: unreserve device
      operationId: unreserveDevice
     
      responses:
        '200':    # status code
          description: device 
          schema:
              $ref: "components/device/device.yaml#/Device"


components:
  securitySchemes:
    accesskey:
      type: apiKey
      name: accesskey
      in: query



