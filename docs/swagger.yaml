swagger: 2.0
info:
  version: 1.0.0
  title: RobusTest API
  description: RobusTest API
  termsOfService: http://robustest.com/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
host: robustest.com
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json



paths:
  /v3/devices?accesskey={access_key}:
    get:
      summary: get all devices
      description: get all devices
      operationId: device
      responses:
        '200':    # status code
          description: get all devices
          schema:
            type: object
            properties: 
              available : 
                type: array
                items: 
                  type : object
                  $ref: '#/definitions/device'
              busy : 
                type: array
                items: 
                  type : object
                  $ref: '#/definitions/device'
              offline : 
                type: array
                items: 
                  type : object
                  $ref: '#/definitions/device'
              reserved : 
                type: array
                items: 
                  type : object
                  $ref: '#/definitions/device'
  /v3/device/{device_id}/detail?accesskey={access_key}:
    get:
      summary: get device, session and live screen url by device id
      description: get device, session and live screen url by device id
      operationId: device
      responses:
        '200':    # status code
          description: get device, session and live screen url by device id
          schema:
            type: object
            properties: 
              device : 
                type: object
                $ref: '#/definitions/device'
              session : 
                type: object
                $ref: '#/definitions/testsession'
              liveScreen : 
                type: string
  /v3/device/{device_id}/free?accesskey={access_key}:
    delete:
      summary: free device by device id
      description: free device by device id
      operationId: device
      responses:
        '200':    # status code
          description: device
          schema:
            $ref: '#/definitions/device'
  /v3/session/live:
    get:
      summary: get all live page for logged in user
      description: get all live page for logged in user
      operationId: session
      responses:
        '200':    # status code
          description: testsession
          schema:
            type: array
            items: 
              type : object
              $ref: '#/definitions/testsession'
  /v3/automate:
    post:
      summary: start automate recording 
      description: start automate recording 
      operationId: automate
      parameters:
        - description: start automate recording 
        - name: payload
          in: body
          required: true
          schema:
              $ref: '#/definitions/testPayload'
      responses:
        '200':    # status code
          description: automate response
          schema: 
            $ref: '#/definitions/automateResponse'

  /v3/device/{device_id}/usages:
    get:
      summary: get device current usages
      description: get device current usages
      operationId: device
      responses:
        '200':    # status code
          description: tag
          schema: 
            $ref: '#/definitions/deviceUsagse'

  /v3/project/{project_id}/tags:
    get:
      summary: get tags for project
      description: get tags for project
      operationId: tag
      responses:
        '200':    # status code
          description: tag
          schema: 
            $ref: '#/definitions/tag'
    put:
      summary: update tags for project
      description: update tags for project
      operationId: contact
      parameters:
        - description: update payload
        - name: payload
          in: body
          required: true
          schema:
              $ref: '#/definitions/tagPayload'
      responses:
        '200':    # status code
          description: tags for project
          schema: 
            $ref: '#/definitions/tag'

  /v3/build/{build id}:
    put:
      summary: update build for project
      description: update build for project
      operationId: contact
      parameters:
        - description: update payload
        - name: payload
          in: body
          required: true
          schema:
              $ref: '#/definitions/buildUpdatePayload'
      responses:
        '200':    # status code
          description: build 
          schema: 
            $ref: '#/definitions/build'
    delete:
      summary: delete  build
      description: delete  build
      operationId: build
      responses:
        '200':    # status code
          description: build
          schema: 
            $ref: '#/definitions/build'

  /v3/users:
    get:
      summary: get all users
      description: get all users
      operationId: user
      responses:
        '200':    # status code
          description: users list
          schema: 
            type: array
            items: 
              type : object
              $ref: '#/definitions/user'

  /node_ip:8080/v2/status:
    get:
      summary: get devices status, in progress, allready added
      description: get devices status, in progress, allready added
      operationId: neuron
      responses:
        '200':    # status code
          description: device list
          schema: 
            $ref: '#/definitions/deviceStatus'


  /admin/v3/contacts:
    get:
      summary: get contact
      description: get contact
      operationId: contact
      responses:
        '200':    # status code
          description: contact
          schema: 
            type: array
            items: 
              type : object
              $ref: '#/definitions/Contact'

  /admin/v3/contact/{id}:
    get:
      summary: get contact
      description: get contact
      operationId: contact
      responses:
        '200':    # status code
          description: contact
          schema: 
            $ref: '#/definitions/Contact'
    post:
      summary: create new contact
      description: create new contact
      operationId: contact
      parameters:
        - description: create payload
        - name: payload
          in: body
          required: true
          schema:
              $ref: '#/definitions/ContactPayload'
      responses:
        '200':    # status code
          description: Contact
          schema: 
            $ref: '#/definitions/Contact'
    put:
      summary: update new contact
      description: update new contact
      operationId: contact
      parameters:
        - description: update payload
        - name: payload
          in: body
          required: true
          schema:
              $ref: '#/definitions/ContactPayload'
      responses:
        '200':    # status code
          description: Contact
          schema: 
            $ref: '#/definitions/Contact'
    delete:
      summary: delete contact
      description: delete contact
      operationId: contact
      responses:
        '200':    # status code
          description: contact
          schema: 
            type: string
  /admin/v3/node/{ip}:
    put:
      summary: update node 
      description: update node 
      operationId: node
      parameters:
        - description: node  payload
        - name: body
          in: body
          required: true
          schema:
              $ref: '#/definitions/NodePayload'
      responses:
        '200':    # status code
          description: node
          schema: 
            $ref: '#/definitions/Node'
  /admin/v3/bug/trackerlist:
    get:
      summary: get list for all supported bug trakers
      description: get list for all supported bug trakers
      operationId: bug
      responses:
        '200':    # status code
          description: A JSON array of supported bug tracker name
          schema: 
            type: array
            items: 
              type: string
  /admin/v3/bug/config/jira:
    post:
      summary: create a jira config
      description: create a jira config
      operationId: jiraConfig
      parameters:
        - description: jira config payload
        - name: body
          in: body
          required: true
          schema:
              $ref: '#/definitions/JiraConfigPayload'
      responses:
        '200':    # status code
          description: A JSON array of jira project names
          schema: 
            type: array
            items: 
              type: string
    get:
      summary : get all jira config 
      description: get all jira config
      operationId: jira
      responses:
        '200':    # status code
          description: get list of jira config
          schema: 
            type: array
            items: 
              type : object
              $ref: '#/definitions/JiraConfig'

  /admin/v3/bug/config/jira/{jira_config_id}:
    put:
      summary: update a jira config
      description: update a jira config
      operationId: jiraConfig
      parameters:
        - description: jira config payload
        - name: payload
          in: body
          required: true
          schema:
              $ref: '#/definitions/JiraConfigPayload'
      responses:
        '200':    # status code
          description: jira config
          schema: 
            $ref: '#/definitions/JiraConfig'
    patch:
      summary: update all projects for a jira config
      description: update all projects for a jira config
      operationId: jiraConfig
      responses:
        '200':    # status code
          description: A JSON array of jira project names
          schema: 
            type: array
            items: 
              type: string
    delete:
      summary: delete jira config and all associated jira project
      description: update all projects for a jira config
      operationId: jiraConfig
      responses:
        '200':    # status code
          schema: 
            type: string
  /admin/v3/bug/config/jira/projects:
    get:
      summary : get all jira project 
      description: get all jira project
      operationId: jira
      responses:
        '200':    # status code
          description: get list of jira project
          schema: 
            type: array
            items: 
              type : object
              $ref: '#/definitions/JiraProject'
  /admin/v3/bug/config/jira/config/{congfig_id}/projects:
    get:
      summary : get all jira project for given config
      description: get all jira project for given config
      operationId: jira
      responses:
        '200':    # status code
          description: get list of jira project for given config
          schema: 
            type: array
            items: 
              type : object
              $ref: '#/definitions/JiraProject'
  /admin/v3/bug/config/jira/projects/{jira_project_id}:
    get:
      summary : get a jira project  details
      description: get a jira project details
      operationId: jira
      responses:
        '200':    # status code
          description: get a jira project details
          schema: 
            type: object
            $ref: '#/definitions/JiraProject'
  /v3/bug/jira/{jira_project_id}/create:
    post:
      summary: create a jira issue
      description: create a jira issue
      operationId: jiraIssue
      parameters:
        - description: jira issue payload
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/jiraIssuePayload'
      responses:
        '200':    # status code
          description: A JSON array of jira project names
          schema: 
            type: object
            $ref: '#/definitions/jiraIssueResponse'
  /v3/project/{project_id}:
    put:
      summary: Update Project 
      description: Update Project from user interface
      operationId: project
      parameters:
        - description: project update payload
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/projectUpdatePayload'
      responses:
        '200':    # status code
          description: A JSON array of jira project names
          schema: 
            type: object
            $ref: '#/definitions/project'
definitions:
  testPayload:
    type: object
    properties: 
      project: 
        type: "string"
      build: 
        type: "string"
      device: 
        type: "string"
  automateResponse:
    type: object
    properties: 
      status: 
        type: "string"
      msg: 
        type: "string"
      session: 
        type: "string"

  deviceUsagse:
    type: object
    properties: 
      UserEmail: 
        type: "string"
      UserID: 
        type: "string"
      UserName: 
        type: "string"
      project: 
        type: "string"
      type: 
        type: "string"
  tag:
    type: object
    properties: 
      _id: 
        type: "string"
      project: 
        type: "string"
      tags: 
        type: "array"
        items: 
          type: "string"
      created: 
        type: "string"
      updated: 
        type: "string"
      updateBy: 
        type: "string"
      createdBy: 
        type: "string"
  tagPayload:
    type: object
    properties: 
      tags: 
        type: "array"
        items: 
          type: "string"  
  buildUpdatePayload:
    type: object
    properties: 
      label: 
        type: "string"
      desc: 
        type: "string"
      activityClass: 
        type: "string"

  build:
    type: object
    properties:
      _id: 
        type: "string"
      label: 
        type: "string"
      desc: 
        type: "string"
      os: 
        type: "string"
      icon64: 
        type: "string"
      packageName: 
        type: "string"
      activityClass: 
        type: "string"
      versionName: 
        type: "string"
      versionCode: 
        type: "string"
      user: 
        type: "string"
      project: 
        type: "string"
      url: 
        type: "string"
      test_c: 
        type: "number"
      active: 
        type: "boolean"
      last: 
        type: "string"
      created: 
        type: "string"


  ContactPayload:
    type: object
    required: 
      - "name"
      - "email"
      - "location"
      - "role"
      - "secondaryPhone"
      - "primaryPhone"
    properties: 
      name: 
        type: "string"
      email: 
        type: "string"
      location: 
        type: "string"
      role: 
        type: "string"
      secondaryPhone: 
        type: "string"
      primaryPhone: 
        type: "string"
  Contact:
    type: object
    properties: 
      _id: 
        type: "string"
      name: 
        type: "string"
      email: 
        type: "string"
      role: 
        type: "string"
      location: 
        type: "string"
      primaryPhone: 
        type: "string"
      secondaryPhone: 
        type: "string"
      updated: 
        type: "string"
      created: 
        type: "string"

  NodePayload:
    type : object
    properties:
      name: 
        type: string
      location: 
        type: string
      macAddress:  
        type: string
      serial: 
        type: string
      contacts: 
        type: "array"
        items: 
          type: "string"
  Node:
    type: object
    properties: 
      _id: 
        type: "string"
      name: 
        type: "string"
      ip: 
        type: "string"
      devices: 
        type: "array"
        items: 
          type: "undefined"
      location: 
        type: "string"
      status: 
        type: "boolean"
      version: 
        type: "boolean"
      os: 
        type: "string"
      serial: 
        type: "string"
      macAddress: 
        type: "string"
      snapshot: 
        type: "string"
      contacts: 
        type: "array"
        items: 
          type: "string"
      lastConnected: 
        type: "string"
      created: 
        type: "string"
      updated: 
        type: "string"
      last: 
        type: "number"

  deviceStatus:
    type: object
    properties: 
      addedDevices: 
        type: "array"
        items: 
          type: "string"
      inProgressDevices: 
        type: "array"
        items: 
          type: "string"
      notAddedDevices: 
        type: "array"
        items: 
          type: "string"
      triedAttempted: 
        type: "array"
        items: 
          type: "string"
  JiraConfig:
    type: object
    properties: 
      _id: 
        type: string
      source: 
        type: string
      type: 
        type: string
      url: 
        type: string
      name: 
        type: string
      user: 
        type: string
      password: 
        type: string
      createdBy: 
        type: string
      updated: 
        type: string
      created: 
        type: string

  JiraConfigPayload:
    type : object
    required: 
      - url
      - name
      - user
      - password
    properties: 
      url: 
        type: string
      name: 
        type: string
      user: 
        type: string
      password: 
        type: string
  JiraProject:
    type: object
    properties: 
      _id: 
        type: string
      source: 
        type: string
      key: 
        type: string
      id: 
        type: string
      name: 
        type: string
      desc: 
        type: string
      users: 
        type: array
        items: 
          type: object
          properties: 
            key: 
              type: string
            name: 
              type: string
            email: 
              type: string
            avatarUrl: 
              type: string
            displayName: 
              type: string
      type: 
        type: string
      component: 
        type: array
        items: 
          type: object
          properties: 
            id: 
              type: string
            name: 
              type: string
      updated: 
        type: string
      created: 
        type: string
  jiraIssueResponse:
    type: object
    properties: 
      id: 
        type: string
      self: 
        type: string
      key: 
        type: string
  jiraIssuePayload:
    type: object
    required: 
      - projectKey
      - assingeeName
      - assingeeKey
      - reporterName
      - reporterKey
      - description
      - summary
      - type
      - attachements
    properties: 
      projectKey: 
        type: string
      assingeeName: 
        type: string
      assingeeKey: 
        type: string
      reporterName: 
        type: string
      reporterKey: 
        type: string
      description: 
        type: string
      summary: 
        type: string
      type: 
        type: string
      attachements: 
        type: array
        items: 
          type: object
          properties: 
            type: 
              type: string
              description: valid type ['text', 'png', 'jpeg']
            name: 
              type: string
            data: 
              type: string
  projectUpdatePayload:
    type: object
    required: 
      - active
      - bugProject
      - users
      - admin
    properties:
      active: 
        type: boolean
      bugProject:
        type: string
      users:
        type: array
        items: 
          type: string
      admin:
        type: array
        items: 
          type: string
  user:
    type: object
    properties: 
        _id: 
          type: "string"
        name: 
          type: "string"
        email: 
          type: "string"
        secrete: 
          type: "string"
        password: 
          type: "string"
        access_key: 
          type: "string"
        active: 
          type: "boolean"
        profile: 
          type: "string"
        projects: 
          type: "array"
          items: 
            type: "string"
        accessedOrder: 
          type: "array"
          items: 
            type: "string"
        isActivated: 
          type: "boolean"
        created: 
          type: "string"
        updated: 
          type: "string"
        confirmed_at: 
          type: "string"
        oauth2Uid: 
          type: "string"
        oauth2Provider: 
          type: "string"
        oauth2Token: 
          type: "string"
        oauth2Refresh: 
          type: "string"
        oauth2Expiry: 
          type: "string"
        confirmToken: 
          type: "string"
        confirmed: 
          type: "boolean"
        recoverToken: 
          type: "string"
        RecoverTokenExpiry: 
          type: "string"
        attemptNumber: 
          type: "number"
        attemptTime: 
          type: "string"
        locked: 
          type: "string"
        location: 
          type: "string"
        primaryPhone: 
          type: "string"
        secondaryPhone: 
          type: "string"
  project:
    type: object
    properties: 
      _id: 
        type: string
      name: 
        type: string
      org: 
        type: string
      os: 
        type: string
      icon64: 
        type: string
      type: 
        type: string
      url: 
        type: string
      bugProject: 
        type: string
      admin: 
        type: array
        items: 
          type: string
      users: 
        type: array
        items: 
          type: string
      test_c: 
        type: number
      active: 
        type: boolean
      is_universal: 
        type: boolean
      last: 
        type: string
      created: 
        type: string
      updated: 
        type: string
      update_by: 
        type: string
      created_by: 
        type: string
  device:
    type: object
    properties: 
      _id: 
        type: "string"
      serial: 
        type: "string"
      key: 
        type: "string"
      uiid: 
        type: "string"
      host: 
        type: "string"
      name: 
        type: "string"
      brand: 
        type: "string"
      model: 
        type: "string"
      model_id: 
        type: "string"
      manufacturer: 
        type: "string"
      clientidbase: 
        type: "string"
      countryCode: 
        type: "string"
      ram: 
        type: "string"
      fingerprint: 
        type: "string"
      version: 
        type: "string"
      isConnected: 
        type: "boolean"
      testSession: 
        type: "string"
      simOperator: 
        type: "string"
      timezone: 
        type: "string"
      resolution: 
        type: "string"
      lcdDensity: 
        type: "string"
      screensize: 
        type: "string"
      img: 
        type: "string"
      numbers: 
        type: "array"
        items: 
          type: "undefined"
      useType: 
        type: "array"
        items: 
          type: "string"
      projects: 
        type: "array"
        items: 
          type: "undefined"
      user: 
        type: "string"
      os: 
        type: "string"
      port: 
        type: "number"
      screenmode: 
        type: "string"
      ratio: 
        type: "number"
      menubar: 
        type: "boolean"
      status: 
        type: "boolean"
      state: 
        type: "number"
      automate: 
        type: "boolean"
      browsers: 
        type: "array"
        items: 
          type: "object"
          properties: 
            name: 
              type: "string"
            component: 
              type: "string"
      apps: 
        type: "array"
        items: 
          type: "string"
      display: 
        required: 
          - "width"
          - "height"
          - "xdpi"
          - "ydpi"
          - "size"
          - "density"
          - "fps"
          - "secure"
          - "rotation"
        properties: 
          width: 
            type: "number"
          height: 
            type: "number"
          xdpi: 
            type: "number"
          ydpi: 
            type: "number"
          size: 
            type: "number"
          density: 
            type: "number"
          fps: 
            type: "number"
          secure: 
            type: "boolean"
          rotation: 
            type: "number"
        type: "object"
      imei: 
        type: "string"
      imsi: 
        type: "string"
      iccid: 
        type: "string"
      phoneNumber: 
        type: "string"
      network: 
        type: "string"
      reserveKey: 
        type: "string"
      usage: 
        required: []
        properties: {}
        type: "object"
      oldHost: 
        type: "string"
      node: 
        required: 
          - "name"
          - "ip"
          - "devices"
          - "location"
          - "status"
          - "version"
          - "os"
          - "serial"
          - "macAddress"
          - "snapshot"
          - "contacts"
          - "lastConnected"
          - "created"
          - "updated"
          - "last"
        properties: 
          name: 
            type: "string"
          ip: 
            type: "string"
          devices: 
            type: "array"
            items: 
              type: "undefined"
          location: 
            type: "string"
          status: 
            type: "boolean"
          version: 
            type: "boolean"
          os: 
            type: "string"
          serial: 
            type: "string"
          macAddress: 
            type: "string"
          snapshot: 
            type: "string"
          contacts: 
            type: "array"
            items: 
              type: "undefined"
          lastConnected: 
            type: "string"
          created: 
            type: "string"
          updated: 
            type: "string"
          last: 
            type: "number"
        type: "object"
      other: 
        type: "string"
      minicap: 
        required: 
          - "state"
        properties: 
          state: 
            type: "number"
        type: "object"
      minitouch: 
        required: 
          - "state"
        properties: 
          state: 
            type: "number"
        type: "object"
      service: 
        required: 
          - "state"
        properties: 
          state: 
            type: "number"
        type: "object"
      agent: 
        required: 
          - "state"
        properties: 
          state: 
            type: "number"
        type: "object"
      nizedha: 
        required: 
          - "state"
        properties: 
          state: 
            type: "number"
        type: "object"
      vnc: 
        required: 
          - "state"
        properties: 
          state: 
            type: "number"
        type: "object"
      isActive: 
        type: "boolean"
      lastConnected: 
        type: "string"
      last: 
        type: "number"
      created: 
        type: "string"
      updated: 
        type: "string"

  testsession:
    type: object
    properties: 
      _id: 
        type: "string"
      org: 
        type: "string"
      project: 
        type: "string"
      user: 
        type: "string"
      os: 
        type: "string"
      device: 
        type: "string"
      serial: 
        type: "string"
      host: 
        type: "string"
      port: 
        type: "number"
      vnc: 
        type: "string"
      build: 
        type: "string"
      websocket: 
        type: "string"
      appium: 
        type: "string"
      browser: 
        type: "string"
      url: 
        type: "string"
      packageName: 
        type: "string"
      activityClass: 
        type: "string"
      type: 
        type: "number"
      state: 
        type: "number"
      screenmode: 
        type: "string"
      reason: 
        type: "string"
      started: 
        type: "boolean"
      completed: 
        type: "boolean"
      start: 
        type: "number"
      last: 
        type: "number"
      isPaused: 
        type: "boolean"
      isDistributed: 
        type: "boolean"
      isResumed: 
        type: "boolean"
      pausedAt: 
        type: "string"
      resumedAt: 
        type: "string"
      ratio: 
        type: "number"
      created: 
        type: "string"
      updated: 
        type: "string"




